@model MvcApplication4.Models.mama

@{
    ViewBag.Title = "resu";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int o = Model.mamaTresult.teamList.Count;
    int l = 0;
}
<div class="row">
<div class="col-lg-12">

    
    <script src="http://code.jquery.com/jquery-1.8.3.min.js"></script>
		<script src="http://underscorejs.org/underscore-min.js"></script>
		<script>
		    $(document).on('ready', function () {
		        var o = '@Model.mamaTresult.teamList.Count',
                    l = 0;
		        var knownBrackets = [2, 4, 8, 16, 32]; // brackets with "perfect" proportions (full fields, no byes)
		        var exampleTeams = [];
		        for (h = 0; h < '@Model.mamaTresult.teamList.Count' / 2; h++) {
		            if (o > l) {
		                exampleTeams.push('@Model.mamaTresult.teamList[l++].name');
		                exampleTeams.push('@Model.mamaTresult.teamList[--o].name');
		            }
                }
		        if (o > l) {
		            exampleTeams.push('@Model.mamaTresult.teamList[l].name');
		        }


		        bracketCount = 0;

		        /*
				 * Build our bracket "model"
				 */
		        function getBracket(base) {

		            var closest = _.find(knownBrackets, function (k) { return k >= base; }),
						byes = closest - base;

		            if (byes > 0) base = closest;

		            var brackets = [],
						round = 1,
						baseT = base / 2,
						baseC = base / 2,
						teamMark = 0,
						nextInc = base / 2;

		            for (i = 1; i <= (base - 1) ; i++) {
		                var baseR = i / baseT,
							isBye = false;

		                if (byes > 0 && (i % 2 != 0 || byes >= (baseT - i))) {
		                    isBye = true;
		                    byes--;
		                }

		                var last = _.map(_.filter(brackets, function (b) { return b.nextGame == i; }), function (b) { return { game: b.bracketNo, teams: b.teamnames }; });

		                brackets.push({
		                    lastGames: round == 1 ? null : [last[0].game, last[1].game],
		                    nextGame: nextInc + i > base - 1 ? null : nextInc + i,
		                    teamnames: round == 1 ? [exampleTeams[teamMark++], exampleTeams[teamMark++]] : [last[0].teams[_.random(1)], last[1].teams[_.random(1)]],
		                    bracketNo: i,
		                    roundNo: round,
		                    bye: isBye
		                });
		                teamMark += 2;
		                if (i % 2 != 0) nextInc--;
		                while (baseR >= 1) {
		                    round++;
		                    baseC /= 2;
		                    baseT = baseT + baseC;
		                    baseR = i / baseT;
		                }
		            }

		            renderBrackets(brackets);
		        }

		        /*
				 * Inject our brackets
				 */
		        function renderBrackets(struct) {
		            var groupCount = _.uniq(_.map(struct, function (s) { return s.roundNo; })).length;

		            var group = $('<div class="group' + (groupCount + 1) + '" id="b' + bracketCount + '"></div>'),
						grouped = _.groupBy(struct, function (s) { return s.roundNo; });

		            for (g = 1; g <= groupCount; g++) {
		                var round = $('<div class="r' + g + '"></div>');
		                _.each(grouped[g], function (gg) {
		                    if (gg.bye)
		                        round.append('<div></div>');
		                    else
		                        round.append('<div><div class="bracketbox"><span class="info">' + gg.bracketNo + '</span><span class="teama">' + gg.teamnames[0] + '</span><span class="teamb">' + gg.teamnames[1] + '</span></div></div>');
		                });
		                group.append(round);
		            }
		            group.append('<div class="r' + (groupCount + 1) + '"><div class="final"><div class="bracketbox"><span class="teamc">' + _.last(struct).teamnames[_.random(1)] + '</span></div></div></div>');
		            $('#brackets').append(group);

		            bracketCount++;
		            $('html,body').animate({
		                scrollTop: $("#b" + (bracketCount - 1)).offset().top
		            });
		        }

		        $('#add').on('click', function () {
		            var opts = '@Model.mamaTresult.teamList.Count';


		            getBracket(opts);

		        });

		    });
		</script>
    
	
		<div id="add" class="metroBtn">Click to See Fixtures</div>
		<div class="brackets" id="brackets">
		</div>
		
		


</div>
    </div>

<div class="row">


     <h2> Points Table </h2>

<div class="col-md-11">
               
                   <table class="table table-striped">
                       <tr>
                           <th>Team Id</th>
                           <th>Team Name</th>
                           <th>Win</th>
                           <th>Lose</th>
                           <th>Tie</th>
                           <th>Points</th>

                       </tr>



                       @for (int h = 0; h < Model.mamaTresult.resultList.Count; h++)
                       {
                       <tr>
                           <td>@Model.mamaTresult.resultList[h].TeamId</td>
                           <td>@Model.mamaTresult.names[h]</td>
                           <td>@Model.mamaTresult.resultList[h].win</td>
                           <td>@Model.mamaTresult.resultList[h].lose</td>
                           <td>@Model.mamaTresult.resultList[h].tie</td>
                           <td>@Model.mamaTresult.resultList[h].points</td> 
                       </tr>
                       }
</table>
               
	
	</div>

                   

                
</div>